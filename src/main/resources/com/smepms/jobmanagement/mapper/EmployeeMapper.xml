<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smepms.jobmanagement.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.smepms.jobmanagement.pojo.Employee" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    <id column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="status_id" property="statusId" jdbcType="INTEGER" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employee_password" property="employeePassword" jdbcType="VARCHAR" />
    <result column="employee_phone" property="employeePhone" jdbcType="VARCHAR" />
    <result column="employee_email" property="employeeEmail" jdbcType="VARCHAR" />
    <result column="employee_birthday" property="employeeBirthday" jdbcType="DATE" />
    <result column="employee_create_time" property="employeeCreateTime" jdbcType="TIMESTAMP" />
    <result column="employee_work_id" property="employeeWorkId" jdbcType="INTEGER" />
    <result column="employee_leader" property="employeeLeader" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    <result column="employee_introduction" property="employeeIntroduction" jdbcType="LONGVARCHAR" />
    <result column="employee_head_sculpture" property="employeeHeadSculpture" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    employee_id, status_id, employee_name, employee_password, employee_phone, employee_email, 
    employee_birthday, employee_create_time, employee_work_id, employee_leader
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    employee_introduction, employee_head_sculpture
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.smepms.jobmanagement.pojo.EmployeeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.smepms.jobmanagement.pojo.EmployeeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_employee
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    delete from t_employee
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.smepms.jobmanagement.pojo.EmployeeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    delete from t_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    insert into t_employee (employee_id, status_id, employee_name, 
      employee_password, employee_phone, employee_email, 
      employee_birthday, employee_create_time, employee_work_id, 
      employee_leader, employee_introduction, 
      employee_head_sculpture)
    values (#{employeeId,jdbcType=INTEGER}, #{statusId,jdbcType=INTEGER}, #{employeeName,jdbcType=VARCHAR}, 
      #{employeePassword,jdbcType=VARCHAR}, #{employeePhone,jdbcType=VARCHAR}, #{employeeEmail,jdbcType=VARCHAR}, 
      #{employeeBirthday,jdbcType=DATE}, #{employeeCreateTime,jdbcType=TIMESTAMP}, #{employeeWorkId,jdbcType=INTEGER}, 
      #{employeeLeader,jdbcType=INTEGER}, #{employeeIntroduction,jdbcType=LONGVARCHAR}, 
      #{employeeHeadSculpture,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs" useGeneratedKeys="true" keyProperty="employeeId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="statusId != null" >
        status_id,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="employeePassword != null" >
        employee_password,
      </if>
      <if test="employeePhone != null" >
        employee_phone,
      </if>
      <if test="employeeEmail != null" >
        employee_email,
      </if>
      <if test="employeeBirthday != null" >
        employee_birthday,
      </if>
      <if test="employeeCreateTime != null" >
        employee_create_time,
      </if>
      <if test="employeeWorkId != null" >
        employee_work_id,
      </if>
      <if test="employeeLeader != null" >
        employee_leader,
      </if>
      <if test="employeeIntroduction != null" >
        employee_introduction,
      </if>
      <if test="employeeHeadSculpture != null" >
        employee_head_sculpture,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="statusId != null" >
        #{statusId,jdbcType=INTEGER},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeePassword != null" >
        #{employeePassword,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null" >
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeEmail != null" >
        #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null" >
        #{employeeBirthday,jdbcType=DATE},
      </if>
      <if test="employeeCreateTime != null" >
        #{employeeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeWorkId != null" >
        #{employeeWorkId,jdbcType=INTEGER},
      </if>
      <if test="employeeLeader != null" >
        #{employeeLeader,jdbcType=INTEGER},
      </if>
      <if test="employeeIntroduction != null" >
        #{employeeIntroduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="employeeHeadSculpture != null" >
        #{employeeHeadSculpture,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smepms.jobmanagement.pojo.EmployeeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    select count(*) from t_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_employee
    <set >
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.statusId != null" >
        status_id = #{record.statusId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeName != null" >
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePassword != null" >
        employee_password = #{record.employeePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePhone != null" >
        employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeEmail != null" >
        employee_email = #{record.employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeBirthday != null" >
        employee_birthday = #{record.employeeBirthday,jdbcType=DATE},
      </if>
      <if test="record.employeeCreateTime != null" >
        employee_create_time = #{record.employeeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeWorkId != null" >
        employee_work_id = #{record.employeeWorkId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeLeader != null" >
        employee_leader = #{record.employeeLeader,jdbcType=INTEGER},
      </if>
      <if test="record.employeeIntroduction != null" >
        employee_introduction = #{record.employeeIntroduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.employeeHeadSculpture != null" >
        employee_head_sculpture = #{record.employeeHeadSculpture,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_employee
    set employee_id = #{record.employeeId,jdbcType=INTEGER},
      status_id = #{record.statusId,jdbcType=INTEGER},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      employee_password = #{record.employeePassword,jdbcType=VARCHAR},
      employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      employee_email = #{record.employeeEmail,jdbcType=VARCHAR},
      employee_birthday = #{record.employeeBirthday,jdbcType=DATE},
      employee_create_time = #{record.employeeCreateTime,jdbcType=TIMESTAMP},
      employee_work_id = #{record.employeeWorkId,jdbcType=INTEGER},
      employee_leader = #{record.employeeLeader,jdbcType=INTEGER},
      employee_introduction = #{record.employeeIntroduction,jdbcType=LONGVARCHAR},
      employee_head_sculpture = #{record.employeeHeadSculpture,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_employee
    set employee_id = #{record.employeeId,jdbcType=INTEGER},
      status_id = #{record.statusId,jdbcType=INTEGER},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      employee_password = #{record.employeePassword,jdbcType=VARCHAR},
      employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      employee_email = #{record.employeeEmail,jdbcType=VARCHAR},
      employee_birthday = #{record.employeeBirthday,jdbcType=DATE},
      employee_create_time = #{record.employeeCreateTime,jdbcType=TIMESTAMP},
      employee_work_id = #{record.employeeWorkId,jdbcType=INTEGER},
      employee_leader = #{record.employeeLeader,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_employee
    <set >
      <if test="statusId != null" >
        status_id = #{statusId,jdbcType=INTEGER},
      </if>
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeePassword != null" >
        employee_password = #{employeePassword,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null" >
        employee_phone = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeEmail != null" >
        employee_email = #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null" >
        employee_birthday = #{employeeBirthday,jdbcType=DATE},
      </if>
      <if test="employeeCreateTime != null" >
        employee_create_time = #{employeeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeWorkId != null" >
        employee_work_id = #{employeeWorkId,jdbcType=INTEGER},
      </if>
      <if test="employeeLeader != null" >
        employee_leader = #{employeeLeader,jdbcType=INTEGER},
      </if>
      <if test="employeeIntroduction != null" >
        employee_introduction = #{employeeIntroduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="employeeHeadSculpture != null" >
        employee_head_sculpture = #{employeeHeadSculpture,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_employee
    set status_id = #{statusId,jdbcType=INTEGER},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      employee_password = #{employeePassword,jdbcType=VARCHAR},
      employee_phone = #{employeePhone,jdbcType=VARCHAR},
      employee_email = #{employeeEmail,jdbcType=VARCHAR},
      employee_birthday = #{employeeBirthday,jdbcType=DATE},
      employee_create_time = #{employeeCreateTime,jdbcType=TIMESTAMP},
      employee_work_id = #{employeeWorkId,jdbcType=INTEGER},
      employee_leader = #{employeeLeader,jdbcType=INTEGER},
      employee_introduction = #{employeeIntroduction,jdbcType=LONGVARCHAR},
      employee_head_sculpture = #{employeeHeadSculpture,jdbcType=LONGVARCHAR}
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smepms.jobmanagement.pojo.Employee" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_employee
    set status_id = #{statusId,jdbcType=INTEGER},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      employee_password = #{employeePassword,jdbcType=VARCHAR},
      employee_phone = #{employeePhone,jdbcType=VARCHAR},
      employee_email = #{employeeEmail,jdbcType=VARCHAR},
      employee_birthday = #{employeeBirthday,jdbcType=DATE},
      employee_create_time = #{employeeCreateTime,jdbcType=TIMESTAMP},
      employee_work_id = #{employeeWorkId,jdbcType=INTEGER},
      employee_leader = #{employeeLeader,jdbcType=INTEGER}
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>

<sql id="queryAlsoBydept">
    <where >
      1=1
      <if test="departmentId!=null">
          AND d.department_id = #{departmentId}
        </if>
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="and (" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>

</sql>


  <select id="queryEmployeesWithDepartmentAndPosition" resultType="com.smepms.jobmanagement.pojo.Employee"  parameterType="com.smepms.jobmanagement.pojo.EmployeeExample">
    SELECT
      e.employee_id,
      e.employee_name,
      e.status_id ,
      e.employee_phone,
      e.employee_work_id,
      d.department_name "department.departmentName",
      p.position_name "position.positionName"
  FROM
      t_employee e
        LEFT JOIN t_role_employee ON e.employee_id = t_role_employee.employee_id
        LEFT JOIN t_role ON t_role_employee.role_id = t_role.role_id
        LEFT JOIN t_department d ON d.department_id = t_role.department_id
        LEFT JOIN t_position p ON t_role.position_id = p.position_id
    <if test="_parameter != null" >
      <include refid="queryAlsoBydept" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="queryEmployeeWithDepartmentAndPosition" resultType="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs" parameterType="com.smepms.jobmanagement.pojo.EmployeeExample">
    SELECT
	e.employee_id,
	e.employee_name,
	e.status_id,
	e.employee_phone,
	e.employee_work_id,
	e.employee_email,
	e.employee_introduction,
	e.employee_head_sculpture,
	e.employee_birthday,
	e.employee_create_time,
	e.employee_leader,
	e.employee_password,
	e2.employee_name "employeeLeaderName",
	d.department_name "department.departmentName",
	p.position_name "position.positionName",
	d.department_id "department.departmentId",
    p.position_id "position.positionId"
    FROM
        t_employee e
    LEFT JOIN t_role_employee ON e.employee_id = t_role_employee.employee_id
    LEFT JOIN t_role ON t_role_employee.role_id = t_role.role_id
    LEFT JOIN t_department d ON d.department_id = t_role.department_id
    LEFT JOIN t_position p ON t_role.position_id = p.position_id
    LEFT JOIN t_employee e2 ON e.employee_leader = e2.employee_id

    where e.employee_id = #{employeeId,jdbcType=INTEGER}
  </select>

  <update id="updateEmployeeHeadSculptureByPrimaryKey" parameterType="com.smepms.jobmanagement.pojo.EmployeeExample">
    UPDATE t_employee SET employee_head_sculpture = #{employeeHeadSculpture} WHERE employee_id = #{employeeId}
  </update>


  <select id="selectMaxEmployeeWorkId" resultType="java.lang.Integer">
    SELECT max(employee_work_id)+1 employee_work_id
    FROM t_employee;
  </select>

  <insert id="inserEmployeeRole">
    INSERT INTO t_role_employee(role_id,employee_id)VALUES(#{employeeId},#{roleId})
  </insert>
  <update id="updateEmployeeRoleByEmployeeId">
    UPDATE t_role_employee SET role_id = #{roleId} WHERE employee_id = #{employeeId}
  </update>



  <sql id="queryAlsoBydeptAndPosition">
    <where >
      1=1 AND p.position_id IN (2,5) AND e.status_id IN (1,4)
      <if test="departmentId!=null">
        AND d.department_id = #{departmentId}
      </if>
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="and (" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>

  </sql>



  <select id="queryEmployeeLeadersWithDeptAndPosition" parameterType="com.smepms.jobmanagement.pojo.EmployeeExample" resultType="com.smepms.jobmanagement.pojo.Employee">
    SELECT
    e.employee_id,
    e.employee_name,
    e.status_id ,
    e.employee_work_id,
    p.position_name "position.positionName"
    FROM
    t_employee e
    LEFT JOIN t_role_employee ON e.employee_id = t_role_employee.employee_id
    LEFT JOIN t_role ON t_role_employee.role_id = t_role.role_id
    LEFT JOIN t_department d ON d.department_id = t_role.department_id
    LEFT JOIN t_position p ON t_role.position_id = p.position_id
    <if test="_parameter != null" >
      <include refid="queryAlsoBydeptAndPosition" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>


  <!--查询当前登录用户信息，登录验证用的，只需要用户名和密码-->
  <select id="queryOneEmployeeWithBLOBsByEmployeeWorkId" resultType="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs">
    SELECT employee_password,employee_work_id,employee_id
    FROM t_employee WHERE employee_work_id = #{employeeWorkId}
  </select>

  <!--查询当前登录用户角色信息-->
  <select id="queryEmployeeRolesByEmployeeWorkId" resultType="java.lang.String">
    SELECT
	r.role_name
    FROM
        t_employee e
    LEFT JOIN t_role_employee ON e.employee_id = t_role_employee.employee_id
    LEFT JOIN t_role r ON t_role_employee.role_id = r.role_id
    WHERE e.employee_work_id = #{employeeWorkId}
  </select>
  <select id="queryEmployeeWorkIdHasTheSame" resultType="java.lang.Integer">
    select count(1) from t_employee where employee_work_id = #{employeeWorkId};
  </select>

  <!--查询当前登录用户角色对应的权限信息-->
  <select id="queryEmployeeFunctionByEmployeeWorkId" resultType="java.lang.String">
      SELECT
          (CASE WHEN f.function_url IS NULL THEN 'employee:view_self' ELSE f.function_url END) as 'function_url'
      FROM
          t_employee e
      LEFT JOIN t_role_employee ON e.employee_id = t_role_employee.employee_id
      LEFT JOIN t_role r ON t_role_employee.role_id = r.role_id
      LEFT JOIN t_function_role ON t_function_role.role_id = r.role_id
      LEFT JOIN t_function f ON t_function_role.function_id = f.function_id
      WHERE
          e.employee_work_id = #{employeeWorkId}
  </select>


  <select id="queryEmployeeWithDepartmentAndPositionByEmployeeWorkId" resultType="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs">
    SELECT
	e.employee_id,
	e.employee_name,
	e.status_id,
	e.employee_phone,
	e.employee_work_id,
	e.employee_email,
	e.employee_introduction,
	e.employee_head_sculpture,
	e.employee_birthday,
	e.employee_create_time,
	e.employee_leader,
	e.employee_password,
	e2.employee_name "employeeLeaderName",
	d.department_name "department.departmentName",
	p.position_name "position.positionName",
	d.department_id "department.departmentId",
    p.position_id "position.positionId"
    FROM
        t_employee e
    LEFT JOIN t_role_employee ON e.employee_id = t_role_employee.employee_id
    LEFT JOIN t_role ON t_role_employee.role_id = t_role.role_id
    LEFT JOIN t_department d ON d.department_id = t_role.department_id
    LEFT JOIN t_position p ON t_role.position_id = p.position_id
    LEFT JOIN t_employee e2 ON e.employee_leader = e2.employee_id

    where e.employee_work_id = #{employeeWorkId,jdbcType=INTEGER}
  </select>
  <select id="queryEmployeeByPositionAndDepartment" parameterType="java.lang.Integer" resultType="com.smepms.jobmanagement.pojo.EmployeeWithBLOBs">
    SELECT
      	e.employee_id,
        e.employee_name,
        e.status_id,
        e.employee_phone,
        e.employee_work_id,
        e.employee_email,
        e.employee_introduction,
        e.employee_head_sculpture,
        e.employee_birthday,
        e.employee_create_time,
        e.employee_leader,
        e.employee_password
    FROM
      t_employee e
      LEFT JOIN t_role_employee re ON e.employee_id = re.employee_id
      LEFT JOIN t_role r ON r.role_id = re.role_id
        WHERE r.position_id = #{positionId} and r.department_id = #{departmentId}
  </select>

</mapper>