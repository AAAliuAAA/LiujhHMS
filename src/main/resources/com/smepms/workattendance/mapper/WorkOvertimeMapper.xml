<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smepms.workattendance.mapper.WorkOvertimeMapper" >
  <resultMap id="BaseResultMap" type="com.smepms.workattendance.pojo.WorkOvertime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    <id column="work_overtime_id" property="workOvertimeId" jdbcType="INTEGER" />
    <result column="work_overtime_date" property="workOvertimeDate" jdbcType="DATE" />
    <result column="work_overtime_hour" property="workOvertimeHour" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    work_overtime_id, work_overtime_date, work_overtime_hour
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.smepms.workattendance.pojo.WorkOvertimeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_work_overtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_work_overtime
    where work_overtime_id = #{workOvertimeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    delete from t_work_overtime
    where work_overtime_id = #{workOvertimeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.smepms.workattendance.pojo.WorkOvertimeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    delete from t_work_overtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smepms.workattendance.pojo.WorkOvertime" useGeneratedKeys="true" keyProperty="workOvertimeId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    insert into t_work_overtime (work_overtime_id, work_overtime_date, work_overtime_hour
      )
    values (#{workOvertimeId,jdbcType=INTEGER}, #{workOvertimeDate,jdbcType=DATE}, #{workOvertimeHour,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.smepms.workattendance.pojo.WorkOvertime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    insert into t_work_overtime
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workOvertimeId != null" >
        work_overtime_id,
      </if>
      <if test="workOvertimeDate != null" >
        work_overtime_date,
      </if>
      <if test="workOvertimeHour != null" >
        work_overtime_hour,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workOvertimeId != null" >
        #{workOvertimeId,jdbcType=INTEGER},
      </if>
      <if test="workOvertimeDate != null" >
        #{workOvertimeDate,jdbcType=DATE},
      </if>
      <if test="workOvertimeHour != null" >
        #{workOvertimeHour,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smepms.workattendance.pojo.WorkOvertimeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    select count(*) from t_work_overtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_work_overtime
    <set >
      <if test="record.workOvertimeId != null" >
        work_overtime_id = #{record.workOvertimeId,jdbcType=INTEGER},
      </if>
      <if test="record.workOvertimeDate != null" >
        work_overtime_date = #{record.workOvertimeDate,jdbcType=DATE},
      </if>
      <if test="record.workOvertimeHour != null" >
        work_overtime_hour = #{record.workOvertimeHour,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_work_overtime
    set work_overtime_id = #{record.workOvertimeId,jdbcType=INTEGER},
      work_overtime_date = #{record.workOvertimeDate,jdbcType=DATE},
      work_overtime_hour = #{record.workOvertimeHour,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smepms.workattendance.pojo.WorkOvertime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_work_overtime
    <set >
      <if test="workOvertimeDate != null" >
        work_overtime_date = #{workOvertimeDate,jdbcType=DATE},
      </if>
      <if test="workOvertimeHour != null" >
        work_overtime_hour = #{workOvertimeHour,jdbcType=INTEGER},
      </if>
    </set>
    where work_overtime_id = #{workOvertimeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smepms.workattendance.pojo.WorkOvertime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jan 10 18:43:08 CST 2018.
    -->
    update t_work_overtime
    set work_overtime_date = #{workOvertimeDate,jdbcType=DATE},
      work_overtime_hour = #{workOvertimeHour,jdbcType=INTEGER}
    where work_overtime_id = #{workOvertimeId,jdbcType=INTEGER}
  </update>
  <select id="queryWorkAttendanceByEmployeeId" resultType="com.smepms.workattendance.pojo.WorkOvertime" parameterType="java.lang.Integer">
    SELECT
        o.*, e.employee_id "employee.employeeId",
        e.employee_name "employee.employeeName",
        e.status_id "employee.employeeStatusId",
        e.employee_work_id "employee.employeeWorkId",
        st.status_name "workOverTimeStatus.statusName"
    FROM
        t_work_overtime o
    LEFT JOIN t_work_attendance a ON a.work_overtime_id = o.work_overtime_id
    LEFT JOIN t_employee e ON e.employee_id = a.employee_id
    LEFT JOIN t_work_overtime_status st ON st.overtime_id = o.work_overtime_id
    WHERE
	a.employee_id = #{employeeId}
	  ORDER BY o.work_overtime_id DESC limit 5
  </select>
  <select id="queryWorkOvertimeByEmployeeIdListAndStatus" resultType="com.smepms.workattendance.pojo.WorkOvertime" parameterType="java.lang.Integer">
    SELECT
        o.*, e.employee_id "employee.employeeId",
        e.employee_name "employee.employeeName",
        e.status_id "employee.employeeStatusId",
        e.employee_work_id "employee.employeeWorkId",
        st.status_name "workOverTimeStatus.statusName"
    FROM
        t_work_overtime o
    LEFT JOIN t_work_attendance a ON a.work_overtime_id = o.work_overtime_id
    LEFT JOIN t_employee e ON e.employee_id = a.employee_id
    LEFT JOIN t_work_overtime_status st ON st.overtime_id = o.work_overtime_id
    WHERE
        e.employee_id IN
    <foreach collection="employeeIdList" item="id" index="index"
             open="(" close=")" separator=",">
      #{id}
    </foreach>
    AND
    st.`status` = #{status}
  </select>
  <select id="selectByDate" resultType="com.smepms.workattendance.pojo.WorkOvertime">
     SELECT
        o.*, e.employee_id "employee.employeeId",
        e.employee_name "employee.employeeName",
        e.status_id "employee.employeeStatusId",
        e.employee_work_id "employee.employeeWorkId",
        st.status_name "workOverTimeStatus.statusName",
        e2.employee_id "employee.employeeLeaderId",
        e2.employee_name "employee.employeeLeaderName",
        e2.employee_work_id "employee.employeeLeaderWorkId"
    FROM
        t_work_overtime o
    LEFT JOIN t_work_attendance a ON a.work_overtime_id = o.work_overtime_id
    LEFT JOIN t_employee e ON e.employee_id = a.employee_id
    LEFT JOIN t_work_overtime_status st ON st.overtime_id = o.work_overtime_id
    LEFT JOIN t_employee e2 ON  e.employee_leader = e2.employee_id
    WHERE 1=1
    <if test="startDate != null">
    AND
    o.work_overtime_date > #{startDate}
    </if>
    <if test="endDate != null">
      AND
      o.work_overtime_date &lt; #{endDate}
    </if>
    AND st.status = #{status}
  </select>
</mapper>