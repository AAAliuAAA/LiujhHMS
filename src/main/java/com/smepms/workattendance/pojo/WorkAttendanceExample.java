package com.smepms.workattendance.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class WorkAttendanceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public WorkAttendanceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andWorkAttendanceIdIsNull() {
            addCriterion("work_attendance_id is null");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdIsNotNull() {
            addCriterion("work_attendance_id is not null");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdEqualTo(Integer value) {
            addCriterion("work_attendance_id =", value, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdNotEqualTo(Integer value) {
            addCriterion("work_attendance_id <>", value, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdGreaterThan(Integer value) {
            addCriterion("work_attendance_id >", value, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("work_attendance_id >=", value, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdLessThan(Integer value) {
            addCriterion("work_attendance_id <", value, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdLessThanOrEqualTo(Integer value) {
            addCriterion("work_attendance_id <=", value, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdIn(List<Integer> values) {
            addCriterion("work_attendance_id in", values, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdNotIn(List<Integer> values) {
            addCriterion("work_attendance_id not in", values, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdBetween(Integer value1, Integer value2) {
            addCriterion("work_attendance_id between", value1, value2, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceIdNotBetween(Integer value1, Integer value2) {
            addCriterion("work_attendance_id not between", value1, value2, "workAttendanceId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdIsNull() {
            addCriterion("work_overtime_id is null");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdIsNotNull() {
            addCriterion("work_overtime_id is not null");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdEqualTo(Integer value) {
            addCriterion("work_overtime_id =", value, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdNotEqualTo(Integer value) {
            addCriterion("work_overtime_id <>", value, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdGreaterThan(Integer value) {
            addCriterion("work_overtime_id >", value, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("work_overtime_id >=", value, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdLessThan(Integer value) {
            addCriterion("work_overtime_id <", value, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdLessThanOrEqualTo(Integer value) {
            addCriterion("work_overtime_id <=", value, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdIn(List<Integer> values) {
            addCriterion("work_overtime_id in", values, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdNotIn(List<Integer> values) {
            addCriterion("work_overtime_id not in", values, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdBetween(Integer value1, Integer value2) {
            addCriterion("work_overtime_id between", value1, value2, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andWorkOvertimeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("work_overtime_id not between", value1, value2, "workOvertimeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIsNull() {
            addCriterion("employee_id is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIsNotNull() {
            addCriterion("employee_id is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdEqualTo(Integer value) {
            addCriterion("employee_id =", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotEqualTo(Integer value) {
            addCriterion("employee_id <>", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdGreaterThan(Integer value) {
            addCriterion("employee_id >", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("employee_id >=", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLessThan(Integer value) {
            addCriterion("employee_id <", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLessThanOrEqualTo(Integer value) {
            addCriterion("employee_id <=", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIn(List<Integer> values) {
            addCriterion("employee_id in", values, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotIn(List<Integer> values) {
            addCriterion("employee_id not in", values, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdBetween(Integer value1, Integer value2) {
            addCriterion("employee_id between", value1, value2, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("employee_id not between", value1, value2, "employeeId");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateIsNull() {
            addCriterion("work_attendance_date is null");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateIsNotNull() {
            addCriterion("work_attendance_date is not null");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateEqualTo(Date value) {
            addCriterionForJDBCDate("work_attendance_date =", value, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("work_attendance_date <>", value, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateGreaterThan(Date value) {
            addCriterionForJDBCDate("work_attendance_date >", value, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("work_attendance_date >=", value, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateLessThan(Date value) {
            addCriterionForJDBCDate("work_attendance_date <", value, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("work_attendance_date <=", value, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateIn(List<Date> values) {
            addCriterionForJDBCDate("work_attendance_date in", values, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("work_attendance_date not in", values, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("work_attendance_date between", value1, value2, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andWorkAttendanceDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("work_attendance_date not between", value1, value2, "workAttendanceDate");
            return (Criteria) this;
        }

        public Criteria andLateIsNull() {
            addCriterion("late is null");
            return (Criteria) this;
        }

        public Criteria andLateIsNotNull() {
            addCriterion("late is not null");
            return (Criteria) this;
        }

        public Criteria andLateEqualTo(Integer value) {
            addCriterion("late =", value, "late");
            return (Criteria) this;
        }

        public Criteria andLateNotEqualTo(Integer value) {
            addCriterion("late <>", value, "late");
            return (Criteria) this;
        }

        public Criteria andLateGreaterThan(Integer value) {
            addCriterion("late >", value, "late");
            return (Criteria) this;
        }

        public Criteria andLateGreaterThanOrEqualTo(Integer value) {
            addCriterion("late >=", value, "late");
            return (Criteria) this;
        }

        public Criteria andLateLessThan(Integer value) {
            addCriterion("late <", value, "late");
            return (Criteria) this;
        }

        public Criteria andLateLessThanOrEqualTo(Integer value) {
            addCriterion("late <=", value, "late");
            return (Criteria) this;
        }

        public Criteria andLateIn(List<Integer> values) {
            addCriterion("late in", values, "late");
            return (Criteria) this;
        }

        public Criteria andLateNotIn(List<Integer> values) {
            addCriterion("late not in", values, "late");
            return (Criteria) this;
        }

        public Criteria andLateBetween(Integer value1, Integer value2) {
            addCriterion("late between", value1, value2, "late");
            return (Criteria) this;
        }

        public Criteria andLateNotBetween(Integer value1, Integer value2) {
            addCriterion("late not between", value1, value2, "late");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyIsNull() {
            addCriterion("leave_early is null");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyIsNotNull() {
            addCriterion("leave_early is not null");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyEqualTo(Integer value) {
            addCriterion("leave_early =", value, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyNotEqualTo(Integer value) {
            addCriterion("leave_early <>", value, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyGreaterThan(Integer value) {
            addCriterion("leave_early >", value, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyGreaterThanOrEqualTo(Integer value) {
            addCriterion("leave_early >=", value, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyLessThan(Integer value) {
            addCriterion("leave_early <", value, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyLessThanOrEqualTo(Integer value) {
            addCriterion("leave_early <=", value, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyIn(List<Integer> values) {
            addCriterion("leave_early in", values, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyNotIn(List<Integer> values) {
            addCriterion("leave_early not in", values, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyBetween(Integer value1, Integer value2) {
            addCriterion("leave_early between", value1, value2, "leaveEarly");
            return (Criteria) this;
        }

        public Criteria andLeaveEarlyNotBetween(Integer value1, Integer value2) {
            addCriterion("leave_early not between", value1, value2, "leaveEarly");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_work_attendance
     *
     * @mbggenerated do_not_delete_during_merge Wed Jan 10 18:43:08 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_work_attendance
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}