package com.smepms.jobmanagement.mapper;

import com.smepms.jobmanagement.pojo.Employee;
import com.smepms.jobmanagement.pojo.EmployeeExample;
import com.smepms.jobmanagement.pojo.EmployeeWithBLOBs;
import java.util.List;
import java.util.Set;

import com.smepms.jobmanagement.pojo.Status;
import org.apache.ibatis.annotations.Param;

public interface EmployeeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int countByExample(EmployeeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int deleteByExample(EmployeeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int deleteByPrimaryKey(Integer employeeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int insert(EmployeeWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int insertSelective(EmployeeWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    List<EmployeeWithBLOBs> selectByExampleWithBLOBs(EmployeeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    List<Employee> selectByExample(EmployeeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    EmployeeWithBLOBs selectByPrimaryKey(Integer employeeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int updateByExampleSelective(@Param("record") EmployeeWithBLOBs record, @Param("example") EmployeeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int updateByExampleWithBLOBs(@Param("record") EmployeeWithBLOBs record, @Param("example") EmployeeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int updateByExample(@Param("record") Employee record, @Param("example") EmployeeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int updateByPrimaryKeySelective(EmployeeWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int updateByPrimaryKeyWithBLOBs(EmployeeWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_employee
     *
     * @mbggenerated Wed Jan 10 18:43:08 CST 2018
     */
    int updateByPrimaryKey(Employee record);


    List<Employee> queryEmployeesWithDepartmentAndPosition(EmployeeExample employeeExample);

    EmployeeWithBLOBs queryEmployeeWithDepartmentAndPosition(@Param("employeeId") Integer employeeId);

    int updateEmployeeHeadSculptureByPrimaryKey(EmployeeWithBLOBs employeeWithBLOBs);

    Integer selectMaxEmployeeWorkId();

    Integer inserEmployeeRole(@Param("employeeId")Integer employeeId,@Param("roleId")Integer roleId);

    List<Employee> queryEmployeeLeadersWithDeptAndPosition(EmployeeExample employeeExample);

    EmployeeWithBLOBs queryOneEmployeeWithBLOBsByEmployeeWorkId(@Param("employeeWorkId") Integer employeeWorkId);

    Set<String> queryEmployeeRolesByEmployeeWorkId(@Param("employeeWorkId")Integer employeeWorkId);

    Integer queryEmployeeWorkIdHasTheSame(@Param("employeeWorkId")Integer employeeWorkId);

    EmployeeWithBLOBs queryEmployeeWithDepartmentAndPositionByEmployeeWorkId(@Param("employeeWorkId") Integer employeeWorkId);

    Set<String> queryEmployeeFunctionByEmployeeWorkId(@Param("employeeWorkId")Integer employeeWorkId);

    Integer updateEmployeeRoleByEmployeeId(@Param("employeeId")Integer employeeId,@Param("roleId")Integer roleId);

    List<EmployeeWithBLOBs> queryEmployeeByPositionAndDepartment(@Param("departmentId")Integer departmentId,@Param("positionId")Integer positionId);
}